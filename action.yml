name: Deploy to Google Artifactory
description: A GitHub Action that deploys a Docker image to Google Container Registry

author: castroneto
branding:
  icon: archive
  color: blue

inputs:
  credentials_json:
    description: 'The JSON contents of the Google Cloud Service Account key file'
    required: true
  gcp_project:
    description: 'The name of the Google Cloud project'
    required: true
  gcp_registry:
    description: 'The URL of the Google Container Registry'
    required: true
  gcp_repository:
    description: 'The name of the Google Container Registry repository'
    required: true
  image_name:
    description: 'The name of the Docker image'
    required: true
  image_tag:
    description: 'The tag of the Docker image'
    required: true

outputs:
  image_uri:
    description: 'The URI of the Docker image in Google Container Registry'
    value: ${{ steps.push.outputs.image_uri }}

runs:
  using: 'docker'
  image: 'docker://gcr.io/cloud-builders/docker:latest'
  entrypoint: /bin/sh -c
  command: |
    apk add --no-cache curl jq
    echo "${{ inputs.credentials_json }}" > /tmp/keyfile.json
    gcloud auth activate-service-account --key-file=/tmp/keyfile.json
    gcloud auth configure-docker ${{ inputs.gcp_registry }}
    docker build -t ${{ inputs.image_name }} .
    docker tag ${{ inputs.image_name }} ${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
    docker push ${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
    IMAGE_URI=$(gcloud container images list-tags ${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }} --format='get(digest)')
    echo ::set-output name=image_uri::${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}@${IMAGE_URI}