name: Deploy to Google Artifactory
description: A GitHub Action that deploys a Docker image to Google Container Registry

author: castroneto
branding:
  icon: archive
  color: blue

inputs:
  credentials_json:
    description: 'The JSON contents of the Google Cloud Service Account key file'
    required: true
    default: '${{ secrets.JSON_GCLOUD_SERVICE_ACCOUNT_JSON }}'
  gcp_project:
    description: 'The name of the Google Cloud project'
    required: true
    default: 'dev-castroneto'
  gcp_registry:
    description: 'The URL of the Google Container Registry'
    required: true
    default: 'us-east4-docker.pkg.dev'
  gcp_repository:
    description: 'The name of the Google Container Registry repository'
    required: true
    default: 'argus'
  image_name:
    description: 'The name of the Docker image'
    required: true
    default: 'email-consumer'
  image_tag:
    description: 'The tag of the Docker image'
    required: true
    default: 'latest'

outputs:
  image_uri:
    description: 'The URI of the Docker image in Google Container Registry'
    value: ${{ steps.push.outputs.image_uri }}

runs:
  using: 'docker'
  image: 'docker://gcr.io/cloud-builders/docker:latest'

  steps:
  - name: Checkout code
    uses: actions/checkout@v2

  - name: Authenticate with Google
    uses: google-github-actions/auth@v1
    with:
      credentials_json: ${{ inputs.credentials_json }}

  - name: Configure Docker to use Google Container Registry
    run: |
      echo "${{ inputs.credentials_json }}" | gcloud auth configure-docker ${{ inputs.gcp_registry }}
  - name: Build Docker Image
    run: |
      docker build -t ${{ inputs.image_name }} .
  - name: Tag Docker Image
    run: |
      docker tag ${{ inputs.image_name }} ${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
  - name: Push Docker Image
    id: push
    run: |
      docker push ${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
    env:
      DOCKER_BUILDKIT: '1'

  - name: Set output
    run: |
      echo ::set-output name=image_uri::${{ inputs.gcp_registry }}/${{ inputs.gcp_project }}/${{ inputs.gcp_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
